/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ManageIndexRouteImport } from './routes/manage_.index'
import { Route as ManageResetRouteImport } from './routes/manage_.reset'
import { Route as ManageLoginRouteImport } from './routes/manage_.login'
import { Route as ManageFormRouteImport } from './routes/manage_.form'
import { Route as ManageFormFormSlugRouteImport } from './routes/manage_.form_.$formSlug'

const ManageIndexRoute = ManageIndexRouteImport.update({
  id: '/manage_/',
  path: '/manage/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageResetRoute = ManageResetRouteImport.update({
  id: '/manage_/reset',
  path: '/manage/reset',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageLoginRoute = ManageLoginRouteImport.update({
  id: '/manage_/login',
  path: '/manage/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageFormRoute = ManageFormRouteImport.update({
  id: '/manage_/form',
  path: '/manage/form',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageFormFormSlugRoute = ManageFormFormSlugRouteImport.update({
  id: '/manage_/form_/$formSlug',
  path: '/manage/form/$formSlug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/manage/form': typeof ManageFormRoute
  '/manage/login': typeof ManageLoginRoute
  '/manage/reset': typeof ManageResetRoute
  '/manage': typeof ManageIndexRoute
  '/manage/form/$formSlug': typeof ManageFormFormSlugRoute
}
export interface FileRoutesByTo {
  '/manage/form': typeof ManageFormRoute
  '/manage/login': typeof ManageLoginRoute
  '/manage/reset': typeof ManageResetRoute
  '/manage': typeof ManageIndexRoute
  '/manage/form/$formSlug': typeof ManageFormFormSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/manage_/form': typeof ManageFormRoute
  '/manage_/login': typeof ManageLoginRoute
  '/manage_/reset': typeof ManageResetRoute
  '/manage_/': typeof ManageIndexRoute
  '/manage_/form_/$formSlug': typeof ManageFormFormSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/manage/form' | '/manage/login' | '/manage/reset' | '/manage' | '/manage/form/$formSlug'
  fileRoutesByTo: FileRoutesByTo
  to: '/manage/form' | '/manage/login' | '/manage/reset' | '/manage' | '/manage/form/$formSlug'
  id: '__root__' | '/manage_/form' | '/manage_/login' | '/manage_/reset' | '/manage_/' | '/manage_/form_/$formSlug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ManageFormRoute: typeof ManageFormRoute
  ManageLoginRoute: typeof ManageLoginRoute
  ManageResetRoute: typeof ManageResetRoute
  ManageIndexRoute: typeof ManageIndexRoute
  ManageFormFormSlugRoute: typeof ManageFormFormSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/manage_/': {
      id: '/manage_/'
      path: '/manage'
      fullPath: '/manage'
      preLoaderRoute: typeof ManageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage_/reset': {
      id: '/manage_/reset'
      path: '/manage/reset'
      fullPath: '/manage/reset'
      preLoaderRoute: typeof ManageResetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage_/login': {
      id: '/manage_/login'
      path: '/manage/login'
      fullPath: '/manage/login'
      preLoaderRoute: typeof ManageLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage_/form': {
      id: '/manage_/form'
      path: '/manage/form'
      fullPath: '/manage/form'
      preLoaderRoute: typeof ManageFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage_/form_/$formSlug': {
      id: '/manage_/form_/$formSlug'
      path: '/manage/form/$formSlug'
      fullPath: '/manage/form/$formSlug'
      preLoaderRoute: typeof ManageFormFormSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  ManageFormRoute: ManageFormRoute,
  ManageLoginRoute: ManageLoginRoute,
  ManageResetRoute: ManageResetRoute,
  ManageIndexRoute: ManageIndexRoute,
  ManageFormFormSlugRoute: ManageFormFormSlugRoute,
}
export const routeTree = rootRouteImport._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>()
